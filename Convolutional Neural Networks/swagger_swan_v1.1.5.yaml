swagger: '2.0'
info:
  title: SWAN API Service - MVP
  version: 1.1.5
host: request-handler-dot-telus-projectswan-delivery.appspot.com
schemes:
  - https
x-google-management:
  metrics:
    - name: api-read-requests
      displayName: SWAN API read requests
      valueType: INT64
      metricKind: DELTA
  quota:
    limits:
      - name: api-read-limit
        metric: api-read-requests
        unit: '1/min/{project}'
        values:
          STANDARD: 100
tags:
  - name: Create Area
    description: Used to upload shapefiles
  - name: Read Area
    description: Used to read shapefiles
  - name: Geofence
    description: See a list of uploaded shapefiles
  - name: Unique
    description: Uniques devices in area in specific time
  - name: DwellTime
    description: Used to filter people who are in the zone for more than some time
  - name: Work/Home
    description: Used to retrieve home or work location
  - name: Origin/Destination
    description: Returns a list of areas with a count that the users in area dwelled at previous to the current location
  - name: RepeatVisitation
    description: Similar to DwellTime but for repeat visitation
  - name: PassthroughTraffic
    description: Traffic that is passing through
  - name: TotalTrip
    description: Unique count for total trips accross a zone
  - name: TradeArea
    description: Trade area service endpoint
  - name: Demographic
    description: Demographic endpoint
  - name: UsageService
    description: TokenService endpoint
paths:
  /shapefile:
    post:
      tags:
        - Create Area
      summary: upload a shapefile
      description: >-
        Upload a shapefile and recieve a requestID.


        Acceptable file include .kml (Google Keyhole Markup), .zip (ESRI
        Shapefile) and .json (GeoJSON) that are less than 25MB


        Within the shapefile each polygon 1) Must have geometry information 2)
        Must have 'study_area' in the properties 3) 'study_area' must NOT
        contain backslashes or quotation marks 
      operationId: Shapefile
      consumes:
        - binary
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          required: true
        - name: file
          in: body
          description: A compressed zip file containing the shapefiles
          required: true
          schema:
            type: string
            format: binary
      responses:
        '201':
          description: >-
            Request Created. Please check the link with link relation 
            check_status to find out if the result is ready for cunsumption.
          schema:
            type: object
            properties:
              description:
                type: string
                example: Shapefile is uploaded successfully
              requestId:
                type: string
                example: c764703b-2043-48ff-8929-d18bc50f1a62
              link:
                type: object
                properties:
                  rel:
                    type: string
                    example: status
                  url:
                    type: string
                    example: count/status/c764703b-2043-48ff-8929-d18bc50f1a62
        '400':
          description: >-
            Invalid shapefile. The shapefile could not be opened with GDAL api.
            At this point there is not request object made, so not request Id
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              message:
                type: string
                example: Invalid shapefile.
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
  '/shapefile/{requestId}':
    get:
      tags:
        - Read Area
      summary: Retrieve status of the shapefile upload
      description: >
        By passing in the request ID, you can determine the status of the
        shapefile
      operationId: queryShapefileStatus
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          required: true
        - name: requestId
          in: path
          description: Request ID generated from POST /upload
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: 'Success, results processed'
          schema:
            type: object
            properties:
              requestId:
                type: string
                example: c764703b-2043-48ff-8929-d18bc50f1a62
              status:
                type: string
                example: PROCESSED
              link:
                type: array
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      example: geofence
                    url:
                      type: string
                      example: /geofence
                    method:
                      type: string
                      example: POST
        '202':
          description: Processing
          schema:
            type: object
            properties:
              requestId:
                type: string
                example: c764703b-2043-48ff-8929-d18bc50f1a62
              status:
                type: string
                example: INPROCESS
              description:
                type: string
                example: Your results are still processing and being validated
              link:
                type: object
                properties:
                  url:
                    type: string
                    example: status
                  rel:
                    type: string
                    example: status
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        '412':
          description: >-
            Invalid shapefile. Please validate and upload the shapefile again.
            Make sure the boundaries are well defined. This error happens if the
            GIS technician finds out the shapefile in invalid. Therefore the
            request Id is avaliable.
          schema:
            type: object
            properties:
              requestId:
                type: string
                example: d764703b-2143-48ff-8929-d18bc50f1a62
              description:
                type: string
                example:
                  - Invalid Shapefile
  '/shapefile/file/{requestId}':
    get:
      tags:
        - Read Area
      summary: Download the shapefile
      description: >
        Download the shapefile after it has been successfully validated and
        transformed into geoJSON
      operationId: downloadShapefile
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          required: true
        - name: requestId
          in: path
          description: Request ID generated from POST /upload
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: The GeoJSON file is returned to the user as a file download
          schema:
            type: string
            format: binary
        '202':
          description: >
            The file is not ready for download either because there was an error
            during transformation or because it hasn't been processed yet
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 202
              status:
                type: string
                example: FILE_RECEIVED
              message:
                type: string
                example: The file is not avaialble for download
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
  /geofence:
    get:
      tags:
        - Geofence
      security:
        - APIKeyHeader: []
      description: See a list of uploaded shapefiles
      operationId: getGeofence
      parameters:
        - name: customerId
          description: Either customer or partner ID required.
          in: header
          type: string
          required: false
        - name: partnerId
          in: header
          type: string
          required: false
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Geofence'
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
  /count/unique:
    post:
      tags:
        - Unique
      description: ''
      operationId: postUnique
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true
        - name: params
          in: body
          required: true
          schema:
            required:
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/InputSingleStudyZone'
      responses:
        '202':
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel:
                    type: string
                  url:
                    type: string
                    example: 'count/unique/{jobId}'
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
  '/count/unique/{jobId}':
    get:
      tags:
        - Unique
      description: ''
      operationId: getUnique
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true
        - name: jobId
          in: path
          description: The request id returned from POST /unique
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Unique'
        '202':
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
  /count/dwelltime:
    post:
      tags:
        - DwellTime
      description: ''
      operationId: postDwellTime
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true
        - name: params
          in: body
          required: true
          schema:
            required:
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/InputSingleStudyZone'
      responses:
        '202':
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel:
                    type: string
                  url:
                    type: string
                    example: 'count/dwelltime/{requestId}'
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
  '/count/dwelltime/{jobId}':
    get:
      tags:
        - DwellTime
      description: ''
      operationId: getDwellTime
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true
        - name: jobId
          in: path
          description: The request id returned from POST /dwelltime
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/DwellTime'
        '202':
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
  /count/home:
    post:
      tags:
        - Work/Home
      description: ''
      operationId: postHome
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true
        - name: params
          in: body
          required: true
          schema:
            required:
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/InputSingleStudyZoneWithOutPutZone'
      responses:
        '202':
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel:
                    type: string
                  url:
                    type: string
                    example: 'home/{jobId}'
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
  '/count/home/{jobId}':
    get:
      tags:
        - Work/Home
      description: ''
      operationId: getHome
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true
        - name: jobId
          in: path
          description: The request id returned from POST /home
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/WorkHome'
        '202':
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
  /count/work:
    post:
      tags:
        - Work/Home
      description: |
      operationId: postWork
      security: 
        - APIKeyHeader: []      
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true       
        - name: params
          in: body
          required: true
          schema:
            required: 
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/InputSingleStudyZoneWithOutPutZone'
      responses:
        202:
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel: 
                    type: string
                  url: 
                    type: string
                    example: count/work/{jobId}
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'    
  '/count/work/{jobId}':
    get:
      tags:
        - Work/Home
      description: |
      operationId: getWork
      security: 
        - APIKeyHeader: []      
      parameters:  
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true                
        - name: jobId
          in: path
          description: The request id returned from POST /work
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: |
          schema:
            $ref: '#/definitions/WorkHome'
        202:
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'         
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'          
  /count/origin:
    post:
      tags:
        - Origin/Destination
      description: |
      operationId: postOrigin
      security: 
        - APIKeyHeader: []      
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true       
        - name: params
          in: body
          required: true
          schema:
            required: 
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/InputMultipleStudyZone'
      responses:
        202:
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel: 
                    type: string
                  url: 
                    type: string
                    example: origin/{jobId}
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'          
  '/count/origin/{jobId}':
    get:
      tags:
        - Origin/Destination
      description: |
      operationId: getOrigin
      security: 
        - APIKeyHeader: []      
      parameters:  
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true                
        - name: jobId
          in: path
          description: The request id returned from POST /origin
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: |
          schema:
            $ref: '#/definitions/OriginDestination'
        202:
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'         
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
  /count/destination:
    post:
      tags:
        - Origin/Destination
      description: |
      operationId: postDestination
      security: 
        - APIKeyHeader: []      
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true       
        - name: params
          in: body
          required: true
          schema:
            required: 
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/InputMultipleStudyZone'
      responses:
        202:
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel: 
                    type: string
                  url: 
                    type: string
                    example: count/destination/{jobId}
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'          
  '/count/destination/{jobId}':
    get:
      tags:
        - Origin/Destination
      description: |
      operationId: getDestination
      security: 
        - APIKeyHeader: []      
      parameters:  
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true                
        - name: jobId
          in: path
          description: The request id returned from POST /destination
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: |
          schema:
            $ref: '#/definitions/OriginDestination'
        202:
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'         
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
  /count/odmatrix:
    post:
      tags:
        - Origin/Destination
      description: |
      operationId: postOriginDestinationMatrix
      security: 
        - APIKeyHeader: []      
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true       
        - name: params
          in: body
          required: true
          schema:
            $ref: '#/definitions/InputSingleStudyZone'          
      responses:
        202:
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel: 
                    type: string
                  url: 
                    type: string
                    example: odmatrix/{jobId}
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'          
  '/count/odmatrix/{jobId}':
    get:
      tags:
        - Origin/Destination
      description: |
      operationId: getOriginDestinationMatrix
      security: 
        - APIKeyHeader: []      
      parameters:  
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true                
        - name: jobId
          in: path
          description: The request id returned from POST /odmatrix
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: |
          schema:
            $ref: '#/definitions/OriginDestinationMatrix'
        202:
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'         
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
  /count/repeatvisitation:
    post:
      tags:
        - RepeatVisitation
      description: |
      operationId: postRepeatVisitation
      security: 
        - APIKeyHeader: []      
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true          
        - name: params
          in: body
          required: true
          schema:
            required: 
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/InputSingleStudyZone'              
      responses:
        202:
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel: 
                    type: string
                  url: 
                    type: string
                    example: repeatvisitation/{jobId}
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'          
  '/count/repeatvisitation/{jobId}':
    get:
      tags:
        - RepeatVisitation
      description: |
      operationId: getRepeatVisitation
      security: 
        - APIKeyHeader: []      
      parameters:  
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true                 
        - name: jobId
          in: path
          description: The request id returned from POST /repeatvisitation
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: |
          schema:
            $ref: '#/definitions/RepeatVisitation'
        202:
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'         
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'              
  /count/passthrough:
    post:
      tags:
        - PassthroughTraffic
      description: |
      operationId: postPassthrough
      security: 
        - APIKeyHeader: []      
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true       
        - name: params
          in: body
          required: true
          schema:
            required: 
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/InputSingleStudyZone'            
      responses:
        202:
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel: 
                    type: string
                  url: 
                    type: string
                    example: passthrough/{jobId}
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'          
  '/count/passthrough/{jobId}':
    get:
      tags:
        - PassthroughTraffic
      description: |
      operationId: getPassthrough
      security: 
        - APIKeyHeader: []      
      parameters:  
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true                
        - name: jobId
          in: path
          description: The request id returned from POST /passthrough
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: |
          schema:
            $ref: '#/definitions/Passthrough'
        202:
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'         
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'            
  /count/totaltrip:
    post:
      tags:
        - TotalTrip
      description: ''
      operationId: postTotalTrip
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true
        - name: params
          in: body
          required: true
          schema:
            required:
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/InputSingleStudyZone'
      responses:
        '202':
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel:
                    type: string
                  url:
                    type: string
                    example: 'totaltrip/{jobId}'
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
  '/count/totaltrip/{jobId}':
    get:
      tags:
        - TotalTrip
      description: ''
      operationId: getTotalTrip
      security:
        - APIKeyHeader: []
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true
        - name: jobId
          in: path
          description: The request id returned from POST /totaltrip
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TotalTrip'
        '202':
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
  /count/tradearea:
    post:
      tags:
        - TradeArea
      description: |
      operationId: postTradeArea
      security: 
        - APIKeyHeader: []      
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true       
        - name: params
          in: body
          required: true
          schema:
            required: 
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/WorkHome'        
      responses:
        202:
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel: 
                    type: string
                  url: 
                    type: string
                    example: tradearea/{jobId}
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'         
  '/count/tradearea/{jobId}':
    get:
      tags:
        - TradeArea
      description: |
      operationId: getTradeArea
      security: 
        - APIKeyHeader: []      
      parameters:  
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true                
        - name: jobId
          in: path
          description: The request id returned from POST /tradearea
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: |
          schema:
            $ref: '#/definitions/TradeArea'
        202:
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'         
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
  /count/demographic:
    post:
      tags:
        - Demographic
      description: |
      operationId: postDemographic
      security: 
        - APIKeyHeader: []      
      parameters:
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true          
        - name: params
          in: body
          required: true
          schema:
            required: 
              - study_zone
              - start_time
              - end_time
            $ref: '#/definitions/InputSingleStudyZone'
      responses:
        202:
          description: Results matching criteria
          schema:
            type: object
            properties:
              jobId:
                type: string
              link:
                type: object
                properties:
                  rel: 
                    type: string
                  url: 
                    type: string
                    example: demographic/{jobId}
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'    
  '/count/demographic/{jobId}':
    get:
      tags:
        - Demographic
      description: |
      operationId: getDemographic
      security: 
        - APIKeyHeader: []      
      parameters:  
        - name: customerId
          in: header
          type: string
          format: uuid
          required: true                 
        - name: jobId
          in: path
          description: The request id returned from POST /demographic
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: |
          schema:
            $ref: '#/definitions/WorkHome'
        202:
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'         
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'           
  '/usage/token':
    get:
      tags:
        - UsageService
      description: ''
      operationId: getUsageService
      security:
        - APIKeyHeader: []
      parameters:
        - name: tokenKey
          in: header
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UsageService'
        '202':
          description: Request was accepted and being processed on.
          schema:
            $ref: '#/definitions/NoticeQueryProcessing'
        '400':
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        '401':
          description: Unauthorized request. The bearer token passed is invalid.
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
    
definitions:
  UsageService:
    type: object
    properties:
      tokenUsage:
        type: number
        format: double
        example: 250.00
        
  Unique:
    type: object
    properties:
      study_zone:
        properties:
          requestId:
            type: string
            description: JobID
            example: c764703b-2043-48ff-8929-d18bc50f1a62
          geoId:
            type: string
            example: kelowna
          buckets:
            type: array
            items:
              type: object
              properties:
                bucket:
                  type: string
                  example: '2019-05-01T00:00:00+00:00'
                count:
                  type: integer
                  example: 5000
      start_time:
        type: string
        example: '2019-05-01T00:00:00+00:00'
      end_time:
        type: string
        example: '2019-05-20T00:00:00+00:00'
  DwellTime:
    type: object
    properties:
      study_zone:
        properties:
          requestId:
            type: string
            example: c764703b-2043-48ff-8929-d18bc50f1a62
          geoId:
            type: string
            example: kelowna
          buckets:
            type: array
            items:
              type: object
              properties:
                bucket:
                  type: string
                  example: '2019-05-01T00:00:00+00:00'
                count:
                  type: integer
                  example: 5000
      start_time:
        type: string
        example: '2019-05-01T00:00:00+00:00'
      end_time:
        type: string
        example: '2019-05-20T00:00:00+00:00'
      status:
        type: string
        example: Completed
  WorkHome:
    type: object
    properties:
      input_study_zone:
        type: object
        properties:
          requestId:
            type: string
            format: uuid
            example: c764703b-2043-48ff-8929-d18bc50f1a62
          geoId:
            type: string
            example: kelowna
      output_study_zone:
        type: array
        items:
          type: object
          properties:
            requestId:
              type: string
              format: uuid
              example: c764703b-2043-48ff-8929-d18bc50f1a62
            geoId:
              type: string
              example: kelowna
            buckets:
              type: array
              items:
                type: object
                properties:
                  bucket:
                    type: string
                    example: '2019-05-01T00:00:00+00:00'
                  count:
                    type: integer
                    example: 5000
                        
      start_time:
        type: string
        example: '2019-05-01T00:00:00+00:00'
      end_time:
        type: string
        example: '2019-05-20T00:00:00+00:00'
  OriginDestination:
    type: object
    properties:
      jobId:
        type: string
        description: "JobID"
        example: c764703b-2043-48ff-8929-d18bc50f1a62
      study_zone:
        type: array
        items:
          type: object
          properties:
            origin_geo:
              type: string
              example: 'c764703b-2043-48ff-8929-d18bc50f1a62.kelowna'
            destination_geo:
              type: string
              example: 'c764703b-2043-48ff-8929-d18bc50f1a62.kelowna'
            count:
              type: integer
              example: 5000
      start_time:
        type: string
        example: "2019-05-01T00:00:00+00:00"
      end_time:
        type: string
        example: "2019-05-20T00:00:00+00:00"
  OriginDestinationMatrix:
    type: object
    properties:
      jobId:
        type: string
        description: "JobID"
        example: c764703b-2043-48ff-8929-d18bc50f1a62
      study_zone:
        $ref: '#/definitions/SingleStudyZone'
      count:
        type: array
        items:
          type: object
          properties:
            origin_fsa:
              type: string
              example: 'V0H'
            destination_fsa:
              type: string
              example: 'V1Y'
            count:
              type: integer
              example: 5000
      start_time:
        type: string
        example: "2019-05-01T00:00:00+00:00"
      end_time:
        type: string
        example: "2019-05-20T00:00:00+00:00"        
  RepeatVisitation:
    type: object
    properties:
      jobId:
        type: string
        description: "JobID"
        example: c764703b-2043-48ff-8929-d18bc50f1a62
      study_zone:
        $ref: '#/definitions/SingleStudyZone'
      count:
        type: integer
        example: 5000
      start_time:
        type: string
        example: "2019-05-01T00:00:00+00:00"
      end_time:
        type: string
        example: "2019-05-20T00:00:00+00:00"
  Passthrough:
    type: object
    properties:
      jobId:
        type: string
        description: "JobID"
        example: c764703b-2043-48ff-8929-d18bc50f1a62
      study_zone:
        $ref: '#/definitions/SingleStudyZone'
      count:
        type: integer
        example: 5000
      start_time:
        type: string
        example: "2019-05-01T00:00:00+00:00"
      end_time:
        type: string
        example: "2019-05-20T00:00:00+00:00"      
  TotalTrip:
    type: object
    properties:
      study_zone:
        properties:
          requestId:
            type: string
            description: JobID
            example: c764703b-2043-48ff-8929-d18bc50f1a62
          geoId:
            type: string
            example: kelowna
          buckets:
            type: array
            items:
              type: object
              properties:
                bucket:
                  type: string
                  example: '2019-05-01T00:00:00+00:00'
                count:
                  type: integer
                  example: 5000
      start_time:
        type: string
        example: '2019-05-01T00:00:00+00:00'
      end_time:
        type: string
        example: '2019-05-20T00:00:00+00:00'
  TradeArea:
    type: object
    properties:
      jobId:
        type: string
        description: "JobID"
        example: c764703b-2043-48ff-8929-d18bc50f1a62
      study_zone:
        $ref: '#/definitions/SingleStudyZone'
      trade_area_type:
        type: array
        items:
          type: object
          properties:
            trade_area_flag:
              type: string
              example: 'tertiary'
      start_time:
        type: string
        example: "2019-05-01T00:00:00+00:00"
      end_time:
        type: string
        example: "2019-05-20T00:00:00+00:00"
      status:
        type: string
        example: "Completed"
  Geofence:
    type: object
    properties:
      customerShapes:
        type: array
        items:
          type: object
          properties:
            requestID:
              type: string
              example: 'c764703b-2043-48ff-8929-d18bc50f1a62'
            geodId:
              type: array
              items:
                type: string
            createdDate: 
              type: string
              example: '2019-05-20T00:00:00+00:00'
  SingleStudyZone:
    type: object
    properties:
      geoId:
        type: string
        example: kelowna
  InputDwellTime:
    type: object
    properties:
      requestId:
        type: string
        format: uuid
        example: c764703b-2043-48ff-8929-d18bc50f1a62
      study_zone:
        type: object
        properties:
          geoId:
            type: string
            example: kelowna
      bucket_size:
        type: object
        properties:
          min:
            type: integer
            example: 0
          max:
            type: integer
            example: 15
      start_time:
        type: string
        format: date
        example: '2019-05-01T00:00:00+00:00'
      end_time:
        type: string
        format: date
        example: '2019-05-01T00:00:00+00:00'
      exclusion_types:
        type: string
        example:
          - workers
          - residents
          - non-workers
          - non-residents
          - repeat-visitors
          - non-repeat-visitors
  InputSingleStudyZone:
    type: object
    properties:
      study_zone:
        type: object
        properties:
          requestId:
            type: string
            format: uuid
            example: c764703b-2043-48ff-8929-d18bc50f1a62
          geoId:
            type: string
            example: kelowna
      bucket_size:
        type: integer
        example: 15
      start_time:
        type: string
        format: date
        example: '2019-05-01'
      end_time:
        type: string
        format: date
        example: '2019-05-01'
      min_dwell_time_minutes:
        type: integer
        example: 15
      max_dwell_time_minutes:
        type: integer
        example: 30
      exclusion_types:
        type: string
        example:
          - workers
          - residents
          - non-workers
          - non-residents
          - repeat-visitors
          - non-repeat-visitors
  InputSingleStudyZoneWithOutPutZone:
    type: object
    properties:
      input_study_zone:
        type: object
        properties:
          requestId:
            type: string
            format: uuid
            example: c764703b-2043-48ff-8929-d18bc50f1a62
          geoId:
            type: string
            example: kelowna
      bucket_size:
        type: number
        example: 15
      output_study_zone:
        type: array
        items:
          type: object
          properties:
            requestId:
              type: string
              format: uuid
              example: c764703b-2043-48ff-8929-d18bc50f1a62
            geoId:
              type: array
              items:
                example: kelowna
      start_date:
        type: string
        format: date
        example: '2019-05-01'
      end_date:
        type: string
        format: date
        example: '2019-05-01'
      min_dwell_time_minutes:
        type: integer
        example: 15
      max_dwell_time_minutes:
        type: integer
        example: 30
      exclusion_types:
        type: string
        example:
          - workers
          - residents
          - non-workers
          - non-residents
          - repeat-visitors
          - non-repeat-visitors
  
  SampleBucketSize:
    type: object
    properties:
      bucket_size:
        type: array
        items:
          type: object
          properties:
            min:
              type: integer
              example: 0
            max:
              type: integer
              example: 15
  InputMultipleStudyZone:
    type: object
    properties:
      requestId:
        type: string
        format: uuid
        example: c764703b-2043-48ff-8929-d18bc50f1a62
      study_zone:
        type: array
        items:
          type: object 
          properties:
            kelowna:
              type: object
      bucket_size:
        type: object
        properties:
          min:
            type: integer
            example: 0
          max:
            type: integer
            example: 15              
      output_geoId:
        type: array
        items:
          example: calgary
      start_time:
        type: string
        format: date
        example: '2019-05-01T00:00:00+00:00'
      end_time:
        type: string
        format: date
        example: '2019-05-01T00:00:00+00:00'
      min_dwell_time_minutes:
        type: integer
        example: 15
      max_dwell_time_minutes:
        type: integer
        example: 30
      exclusion_types:
        type: string
        example:
          - workers
          - residents
          - non-workers
          - non-residents
          - repeat-visitors
          - non-repeat-visitors
  ErrorInvalidInput:
    type: object
    properties:
      code:
        type: integer
        example: 400
      message:
        type: string
        example: Invalid input
  ErrorUnauthorized:
    type: object
    properties:
      code:
        type: integer
        example: 3
      message:
        type: string
        example: API key not valid. Please pass a valid API key.
  ErrorNotFound:
    type: object
    properties:
      code:
        type: integer
        example: 5
      message:
        type: string
        example: Method does not exist.
  NoticeQueryProcessing:
    type: object
    properties:
      jobId:
        type: string
        example: c764703b-2043-48ff-8929-d18bc50f1a62
      status:
        type: string
        example: Processing
      link:
        type: object
        properties:
          rel:
            type: string
            example: self
          url:
            type: string
            example: '/{self}/{jobId}'
security:
  - APIKeyHeader: []
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    name: key
    in: query
